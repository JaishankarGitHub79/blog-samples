<?xml version="1.0" encoding="UTF-8"?>
<beans 
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://cxf.apache.org/core"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:test="http://apache.org/hello_world_soap_http"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://cxf.apache.org/core
        http://cxf.apache.org/schemas/core.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://cxf.apache.org/jaxws                                     
        http://cxf.apache.org/schemas/jaxws.xsd">
    
    <!--    
         TimestampSignEncryptEndpoint endpoint definition    
         This endpoint is configured to work with public key certificates    
         on both client and service side.    
    -->
    <jaxws:endpoint id="doubleit"
       implementor="service.DoubleItPortTypeImpl"
       address="/doubleit" 
       wsdlLocation="WEB-INF/wsdl/DoubleIt.wsdl">
         <jaxws:outInterceptors>
             <ref bean="TimestampSignEncrypt_Response"/>
         </jaxws:outInterceptors>
         <jaxws:inInterceptors>
             <ref bean="TimestampSignEncrypt_Request"/>
         </jaxws:inInterceptors>
    </jaxws:endpoint>

    <!--    
         WSS4JInInterceptor for decrypting and validating the signature of the
         SOAP request.
    -->
    <bean 
        id="TimestampSignEncrypt_Request"
        class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"
        >
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="signaturePropFile" value="serviceKeystore.properties"/>
                <entry key="decryptionPropFile" value="serviceKeystore.properties"/>
                <entry key="passwordCallbackClass" value="service.ServiceKeystorePasswordCallback"/>
            </map>
        </constructor-arg>
    </bean>
    
    <!--    
         WSS4JOutInterceptor for encoding and signing the SOAP response.    
    -->
    <bean 
        id="TimestampSignEncrypt_Response"
        class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor"
        >
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="user" value="myservicekey"/>
                <entry key="signaturePropFile" value="serviceKeystore.properties"/>
                <entry key="encryptionPropFile" value="serviceKeystore.properties"/>
                <entry key="encryptionUser" value="useReqSigCert"/>
                <entry key="passwordCallbackClass" value="service.ServiceKeystorePasswordCallback"/>
                <entry key="signatureParts" value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionParts" value="{Element}{http://www.w3.org/2000/09/xmldsig#}Signature;{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
            </map>
        </constructor-arg>
    </bean>   
</beans>

